!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CurrentConditionsDisplay	currentconditionsdisplay.cpp	/^CurrentConditionsDisplay::CurrentConditionsDisplay(Subject *weatherData)$/;"	f	class:CurrentConditionsDisplay
CurrentConditionsDisplay	currentconditionsdisplay.h	/^class CurrentConditionsDisplay: public Observer, public DisplayElement$/;"	c
DEP	Makefile	/^DEP := $(OBJ:.o=.d)$/;"	m
DisplayElement	displayelement.h	/^class DisplayElement$/;"	c
OBJ	Makefile	/^OBJ := $(SRC:.cpp=.o)$/;"	m
Observer	observer.h	/^class Observer$/;"	c
SRC	Makefile	/^SRC := $(notdir $(files))$/;"	m
Subject	subject.h	/^class Subject$/;"	c
TARGET	Makefile	/^TARGET = observer$/;"	m
WeatherData	weatherdata.cpp	/^WeatherData::WeatherData()$/;"	f	class:WeatherData
WeatherData	weatherdata.h	/^class WeatherData: public Subject$/;"	c
__CURRENT_CONDITIONS_DISPLAY_H__	currentconditionsdisplay.h	/^#define __CURRENT_CONDITIONS_DISPLAY_H__$/;"	d
__DISPLAY_ELEMENT_H__	displayelement.h	/^#define __DISPLAY_ELEMENT_H__$/;"	d
__OBSERVER_H__	observer.h	/^#define __OBSERVER_H__$/;"	d
__SUBJECT_H__	subject.h	/^#define __SUBJECT_H__$/;"	d
__WEATHERDATA_H__	weatherdata.h	/^#define __WEATHERDATA_H__$/;"	d
display	currentconditionsdisplay.cpp	/^void CurrentConditionsDisplay::display()$/;"	f	class:CurrentConditionsDisplay
display	displayelement.h	/^	virtual void display(){};$/;"	f	class:DisplayElement
files	Makefile	/^files := $(wildcard $(PWD)\/*.cpp)$/;"	m
humidity	currentconditionsdisplay.h	/^	float humidity;$/;"	m	class:CurrentConditionsDisplay
humidity	weatherdata.h	/^	float humidity;$/;"	m	class:WeatherData
main	main.cpp	/^int main(void)$/;"	f
measurementsChanged	weatherdata.cpp	/^void WeatherData::measurementsChanged()$/;"	f	class:WeatherData
notifyObserver	subject.h	/^	virtual void notifyObserver(){};$/;"	f	class:Subject
notifyObserver	weatherdata.cpp	/^void WeatherData::notifyObserver()$/;"	f	class:WeatherData
observerList	weatherdata.h	/^	list<Observer *> observerList;	$/;"	m	class:WeatherData
pressure	weatherdata.h	/^	float pressure;$/;"	m	class:WeatherData
registerObserver	subject.h	/^	virtual void registerObserver(Observer *o){};$/;"	f	class:Subject
registerObserver	weatherdata.cpp	/^void WeatherData::registerObserver(Observer *o)$/;"	f	class:WeatherData
removeObserver	subject.h	/^	virtual void removeObserver(Observer *o){};$/;"	f	class:Subject
removeObserver	weatherdata.cpp	/^void WeatherData::removeObserver(Observer *o)$/;"	f	class:WeatherData
setMeasurements	weatherdata.cpp	/^void WeatherData::setMeasurements(float temperature, float humidity, float pressure)$/;"	f	class:WeatherData
sources	Makefile	/^sources := $(PWD)$/;"	m
temperature	currentconditionsdisplay.h	/^	float temperature;$/;"	m	class:CurrentConditionsDisplay
temperature	weatherdata.h	/^	float temperature;$/;"	m	class:WeatherData
update	currentconditionsdisplay.cpp	/^void CurrentConditionsDisplay::update(float temperature, float humidity, float pressure)$/;"	f	class:CurrentConditionsDisplay
update	observer.h	/^	virtual void update(float temp, float humidity, float pressure){};$/;"	f	class:Observer
weatherData	currentconditionsdisplay.h	/^	Subject *weatherData;$/;"	m	class:CurrentConditionsDisplay
